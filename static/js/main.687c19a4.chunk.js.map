{"version":3,"sources":["containers/styledComponents/Wrapper.js","sagas/types.js","containers/Searchbar.js","containers/songs/Song.js","containers/styledComponents/Grid.js","containers/songs/SongList.js","containers/App.js","reducers/songsReducer.js","reducers/searchQueryReducer.js","reducers/index.js","api/iTunes.js","sagas/index.js","index.js"],"names":["styled","section","createTypes","connect","dispatch","onSearch","searchQuery","history","type","Types","FETCH_REQUESTED","payload","location","pathname","push","props","Fragment","Wrapper","labelCol","span","wrapperCol","layout","onFinish","values","search","size","Item","label","name","rules","required","message","style","border","placeholder","Song","title","trackName","extra","href","trackViewUrl","width","margin","artistName","trackId","releaseDate","country","SongList","renderSongList","songs","results","map","song","key","renderSongs","undefined","error","length","textAlign","renderResultNumber","resultCount","this","Grid","React","Component","state","App","path","component","Searchbar","exact","INITIAL_STATE","HANDLERS","FETCH_SONGS","action","FETCH_FAILURE","ReduxSauceTypes","DEFAULT","createReducer","combineReducers","songsReducer","searchQueryReducer","api","create","baseURL","fetchData","get","term","watchFetchData","fetchSongs","takeLatest","call","fetchedSongs","put","data","sagaMiddleware","createSagaMiddleware","store","createStore","Reducers","applyMiddleware","run","ReactDOM","render","locale","document","querySelector"],"mappings":"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","file":"static/js/main.687c19a4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.section`\r\n    margin-top:1.5rem;\r\n    margin-bottom:1.5rem;\r\n    display:flex;\r\n    justify-content:center;\r\n`","import {createTypes} from 'reduxsauce';\r\n\r\nexport default createTypes(`\r\n    FETCH_SONGS\r\n    FETCH_REQUESTED\r\n    FETCH_FAILURE\r\n`, {}) ","import React from 'react';\r\nimport {Form,Input} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Wrapper from './styledComponents/Wrapper';\r\nimport Types from '../sagas/types';\r\n\r\nconst Searchbar = (props) => {\r\n\r\n    const layout = {\r\n        labelCol: { span: 16 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Wrapper>\r\n                <Form \r\n                    {...layout} \r\n                    layout='inline' \r\n                    onFinish={(values)=>props.onSearch(values.search,props.history)}\r\n                    size='large'\r\n                >\r\n                    <Form.Item\r\n                        label=\"Search iTunes\"\r\n                        name=\"search\"\r\n                        rules={[{ required: true, message: 'Search iTunes' }]}\r\n                    >\r\n                        <Input style={{border:'solid black 1px'}} placeholder='Search...'/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Wrapper>\r\n            <hr/>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearch: (searchQuery,history) => {\r\n            dispatch({type:Types.FETCH_REQUESTED,payload:searchQuery});\r\n            if(history.location.pathname!=='/search')\r\n                history.push('/search');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(Searchbar);","import React from 'react';\r\nimport { Card } from 'antd';\r\n\r\nconst Song = (props) => {\r\n    return(\r\n        <Card title={props.trackName} extra={<a href={props.trackViewUrl}>More</a>} style={{ width: 300,border:'solid black 1px',margin:'0.5rem' }}>\r\n            <p><strong>Artist: </strong>{props.artistName}</p>\r\n            <p><strong>Track ID: </strong>{props.trackId}</p>\r\n            <p><strong>Release Date: </strong>{props.releaseDate}</p>\r\n            <p><strong>Country: </strong>{props.country}</p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Song;","import styled from 'styled-components';\r\n\r\nexport default styled.section`\r\n    display: grid;\r\n    grid-gap: 10px;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    justify-content:center;\r\n    justify-items:center;\r\n`","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Spin} from 'antd';\r\n\r\n\r\nimport Song from './Song';\r\nimport Grid from '../styledComponents/Grid';\r\nimport Wrapper from '../styledComponents/Wrapper';\r\n\r\n\r\nclass SongList extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        if(this.props.searchQuery==null) this.props.history.push('');\r\n    }\r\n\r\n    renderSongList = () => {\r\n        return this.props.songs.results.map((song)=>{\r\n            return <Song \r\n                        trackName={song.trackName}\r\n                        country={song.country}\r\n                        releaseDate={song.releaseDate}\r\n                        trackViewUrl={song.trackViewUrl}\r\n                        artistName={song.artistName}\r\n                        trackId={song.trackId}\r\n                        key={song.trackId}\r\n                    />\r\n        })\r\n    }\r\n\r\n    renderSongs = () => {\r\n        if(this.props.songs!==null){\r\n            if(this.props.songs.results===undefined && this.props.songs.error===undefined){\r\n                return(\r\n                    <Wrapper>\r\n                        <Spin size=\"large\" />\r\n                    </Wrapper>\r\n                )\r\n            }\r\n            if(this.props.songs.results!==undefined){\r\n                if(this.props.songs.results.length>0){\r\n                    return this.renderSongList()\r\n                }else if(this.props.songs.results.length === 0){\r\n                    return <h3 style={{textAlign:'center'}}><strong>No Results</strong></h3>\r\n                }\r\n            }\r\n            if(this.props.songs.error){\r\n                return <h3 style={{textAlign:'center'}}><strong>{this.props.songs.error}</strong></h3>\r\n            }else{\r\n                return\r\n            }\r\n        }else{\r\n            return <h3 style={{textAlign:'center'}}><strong>Cannot fetch Results.</strong></h3>\r\n        }\r\n    }\r\n\r\n\r\n    renderResultNumber = () => {\r\n        if(this.props.songs!==null)\r\n            if(this.props.songs.resultCount)\r\n                return <h4 style={{textAlign:'center'}}>Showing {this.props.songs.resultCount} results.</h4>;\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <h4 style={{textAlign:'center'}}>Showing results for: {this.props.searchQuery}</h4>\r\n                {this.renderResultNumber()}\r\n                    <Grid>\r\n                        {this.renderSongs()}\r\n                    </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        songs:state.songs,\r\n        searchQuery:state.searchQuery,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(SongList);","import React from 'react';\r\nimport {HashRouter,Route} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Searchbar from './Searchbar';\r\nimport SongList from './songs/SongList';\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Route path='' component={Searchbar}/>\r\n            <Route path='' exact>\r\n                <h3 style={{textAlign:'center'}}><strong>Search for songs on iTunes.</strong></h3>\r\n            </Route>\r\n            <Route path='/search' exact component={SongList}/>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import { createReducer,Types as ReduxSauceTypes } from 'reduxsauce'\r\nimport Types from '../sagas/types';\r\n \r\n\r\nconst INITIAL_STATE = {}\r\n\r\n\r\nconst success = (state = INITIAL_STATE, action) => {\r\n    return action.payload;\r\n}\r\n \r\n\r\nconst failure = (state = INITIAL_STATE) => {\r\n    return { error:'We are having trouble making your request.' }\r\n}\r\n\r\n\r\nconst emptyReducer = (state = INITIAL_STATE) => {\r\n    return INITIAL_STATE;\r\n}\r\n\r\n\r\nconst defaultHandler = (state = INITIAL_STATE) => {\r\n    return state;\r\n}\r\n \r\n\r\nconst HANDLERS = {\r\n  [Types.FETCH_SONGS]: success,\r\n  [Types.FETCH_FAILURE]: failure,\r\n  [Types.FETCH_REQUESTED]: emptyReducer,\r\n  [ReduxSauceTypes.DEFAULT]: defaultHandler,\r\n}\r\n \r\nexport default createReducer(INITIAL_STATE, HANDLERS)","import { createReducer,Types as ReduxSauceTypes } from 'reduxsauce'\r\nimport Types from '../sagas/types';\r\n \r\n\r\nconst INITIAL_STATE = null\r\n\r\n\r\nconst success = (state = INITIAL_STATE, action) => {\r\n    return action.payload;\r\n}\r\n \r\n\r\nconst failure = (state = INITIAL_STATE) => {\r\n    return '';\r\n}\r\n\r\n\r\nconst defaultHandler = (state = INITIAL_STATE) => {\r\n    return state;\r\n}\r\n \r\n\r\nconst HANDLERS = {\r\n  [Types.FETCH_REQUESTED]: success,\r\n  [Types.FETCH_FAILURE]: failure,\r\n  [ReduxSauceTypes.DEFAULT]: defaultHandler,\r\n}\r\n \r\nexport default createReducer(INITIAL_STATE, HANDLERS)","import { combineReducers } from 'redux';\r\nimport songsReducer from './songsReducer';\r\nimport searchQueryReducer from './searchQueryReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    songs:songsReducer,\r\n    searchQuery:searchQueryReducer\r\n})","import { create } from 'apisauce'\r\n\r\n\r\nconst api = create({\r\n    baseURL:'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/',\r\n})\r\n\r\n\r\nexport const fetchData = searchQuery => {\r\n    const response = api.get('search',{term:searchQuery});\r\n    return response;\r\n}","import { put, takeLatest, call } from 'redux-saga/effects';\r\nimport Types from './types';\r\nimport {fetchData} from '../api/iTunes';\r\n\r\n\r\nexport function* watchFetchData() {\r\n  yield takeLatest(Types.FETCH_REQUESTED, fetchSongs)\r\n}\r\n\r\n\r\nexport default function* fetchSongs(action){\r\n\r\n  try{\r\n    const fetchedSongs = yield call(fetchData,action.payload)\r\n    yield put({ type: Types.FETCH_SONGS, payload:fetchedSongs.data });\r\n  }catch(e){\r\n    yield put({ type: Types.FETCH_FAILURE})\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {IntlProvider} from \"react-intl\";\r\n\r\nimport App from './containers/App';\r\nimport Reducers from './reducers';\r\nimport {watchFetchData} from './sagas';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware(); \r\n\r\nconst store = createStore(Reducers,applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(watchFetchData);\r\n\r\n\r\nReactDOM.render(\r\n    <IntlProvider locale='en'>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </IntlProvider>,\r\n    document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}